<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Liang-Bo Wang's Blog - pygment</title><link href="https://blog.liang2.tw/" rel="alternate"></link><link href="https://blog.liang2.tw/feeds/tag_pygment.atom.xml" rel="self"></link><id>https://blog.liang2.tw/</id><updated>2016-02-19T15:00:00-06:00</updated><entry><title>Add code block language name into CSS classes in Pelican Markdown</title><link href="https://blog.liang2.tw/posts/2016/02/markdown-codehilite-lang/" rel="alternate"></link><published>2016-02-19T15:00:00-06:00</published><updated>2016-02-19T15:00:00-06:00</updated><author><name>Liang-Bo Wang</name></author><id>tag:blog.liang2.tw,2016-02-19:/posts/2016/02/markdown-codehilite-lang/</id><summary type="html">&lt;p&gt;I used &lt;a href="http://docs.getpelican.com/"&gt;Pelican&lt;/a&gt; and its &lt;a href="https://pythonhosted.org/Markdown/"&gt;Markdown&lt;/a&gt; plugin to render blog post. &lt;/p&gt;
&lt;p&gt;Recently I was playing with the &lt;a href="https://docs.python.org/"&gt;Python Official Documentation&lt;/a&gt;, which has a decent â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;I used &lt;a href="http://docs.getpelican.com/"&gt;Pelican&lt;/a&gt; and its &lt;a href="https://pythonhosted.org/Markdown/"&gt;Markdown&lt;/a&gt; plugin to render blog post. &lt;/p&gt;
&lt;p&gt;Recently I was playing with the &lt;a href="https://docs.python.org/"&gt;Python Official Documentation&lt;/a&gt;, which has a decent code syntax highlighter powered by &lt;a href="http://pygments.org/"&gt;Pygments&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;What&amp;rsquo;s more, the output of code examples can be toggled. That is, a code example:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Hello World&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;Hello&lt;/span&gt; &lt;span class="n"&gt;World&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="mi"&gt;6&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;
&lt;span class="mi"&gt;42&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;can be toggled to:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Hello World&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="mi"&gt;6&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="mi"&gt;7&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;which is very convenient for code copy-pasting.&lt;/p&gt;
&lt;p&gt;&lt;del&gt;However, the functionality is currently failed on the official Python doc (given by &lt;a href="https://docs.python.org/3/_static/copybutton.js"&gt;&lt;code&gt;copybutton.js&lt;/code&gt;&lt;/a&gt;) because the jQuery updates break previous API behavior. I&amp;rsquo;ve filed &lt;a href="http://bugs.python.org/issue26246"&gt;issue 26246&lt;/a&gt; on the Python issue tracker for this problem.&lt;/del&gt; (EDIT 2016-02-27: the patch has been merged.)&lt;/p&gt;
&lt;h3 id="code-output-toggle-in-pelican"&gt;Code output toggle in Pelican&lt;/h3&gt;
&lt;p&gt;After I fixed the copybutton.js, I wished to add this functionality to my blog. &lt;/p&gt;
&lt;p&gt;Code highlighting in Pelican markdown files is handled by its &lt;a href="https://pythonhosted.org/Markdown/extensions/code_hilite.html"&gt;CodeHilite&lt;/a&gt; extension. To my surprise, I found CodeHilite does not express the language name specified for each code block.&lt;/p&gt;
&lt;p&gt;What I expected was&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;highlight-python3&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;highlight&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;pre&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
            &lt;span class="c"&gt;&amp;lt;!-- ... --&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;pre&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;but the actual output was&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;highlight&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;pre&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="c"&gt;&amp;lt;!-- ... --&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;pre&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;div&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;So no way to find the language name the code block used, nor the lexer aliases Pygments guessed when no language name was specified.&lt;/p&gt;
&lt;p&gt;A quick dig into the &lt;a href="https://github.com/waylan/Python-Markdown/blob/master/markdown/extensions/codehilite.py#L106-L123"&gt;source code&lt;/a&gt; showed that it is relatively easy to fix. Here is the diff:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gh"&gt;diff --git a/extensions/codehilite.py b/extensions/codehilite_updated.py&lt;/span&gt;
&lt;span class="gh"&gt;index 0657c37..4fad7c5 100644&lt;/span&gt;
&lt;span class="gd"&gt;--- a/extensions/codehilite.py&lt;/span&gt;
&lt;span class="gi"&gt;+++ b/extensions/codehilite_updated.py&lt;/span&gt;
&lt;span class="gu"&gt;@@ -75,7 +75,8 @@ class CodeHilite(object):&lt;/span&gt;

     def __init__(self, src=None, linenums=None, guess_lang=True,
                  css_class=&amp;quot;codehilite&amp;quot;, lang=None, style=&amp;#39;default&amp;#39;,
&lt;span class="gd"&gt;-                 noclasses=False, tab_length=4, hl_lines=None, use_pygments=True):&lt;/span&gt;
&lt;span class="gi"&gt;+                 noclasses=False, tab_length=4, hl_lines=None, use_pygments=True, &lt;/span&gt;
&lt;span class="gi"&gt;+                 wrap_by_lang=True):&lt;/span&gt;
         self.src = src
         self.lang = lang
         self.linenums = linenums
&lt;span class="gu"&gt;@@ -86,6 +87,7 @@ class CodeHilite(object):&lt;/span&gt;
         self.tab_length = tab_length
         self.hl_lines = hl_lines or []
         self.use_pygments = use_pygments
&lt;span class="gi"&gt;+        self.wrap_by_lang = wrap_by_lang&lt;/span&gt;

     def hilite(self):
         &amp;quot;&amp;quot;&amp;quot;
&lt;span class="gu"&gt;@@ -114,13 +116,22 @@ class CodeHilite(object):&lt;/span&gt;
                         lexer = get_lexer_by_name(&amp;#39;text&amp;#39;)
                 except ValueError:
                     lexer = get_lexer_by_name(&amp;#39;text&amp;#39;)
&lt;span class="gi"&gt;+            lang = lexer.aliases[0]&lt;/span&gt;
             formatter = get_formatter_by_name(&amp;#39;html&amp;#39;,
                                               linenos=self.linenums,
                                               cssclass=self.css_class,
                                               style=self.style,
                                               noclasses=self.noclasses,
                                               hl_lines=self.hl_lines)
&lt;span class="gd"&gt;-            return highlight(self.src, lexer, formatter)&lt;/span&gt;
&lt;span class="gi"&gt;+            hilited_html = highlight(self.src, lexer, formatter)&lt;/span&gt;
&lt;span class="gi"&gt;+            if self.wrap_by_lang and self.lang:&lt;/span&gt;
&lt;span class="gi"&gt;+                return &amp;#39;&amp;lt;div class=&amp;quot;%(class)s-%(lang)s&amp;quot;&amp;gt;%(html)s&amp;lt;/div&amp;gt;\n&amp;#39; % {&lt;/span&gt;
&lt;span class="gi"&gt;+                    &amp;#39;class&amp;#39;: self.css_class,&lt;/span&gt;
&lt;span class="gi"&gt;+                    &amp;#39;lang&amp;#39;: lang.replace(&amp;#39;+&amp;#39;, &amp;#39;-&amp;#39;),&lt;/span&gt;
&lt;span class="gi"&gt;+                    &amp;#39;html&amp;#39;: hilited_html,&lt;/span&gt;
&lt;span class="gi"&gt;+                }&lt;/span&gt;
&lt;span class="gi"&gt;+            else:&lt;/span&gt;
&lt;span class="gi"&gt;+                return hilited_html&lt;/span&gt;
         else:
             # just escape and build markup usable by JS highlighting libs
             txt = self.src.replace(&amp;#39;&amp;amp;&amp;#39;, &amp;#39;&amp;amp;amp;&amp;#39;)
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;I&amp;rsquo;m happy with the patched codehilite output. I am now able to give code toggle function to specific code languages. &lt;/p&gt;
&lt;p&gt;However it&amp;rsquo;s quite busy these days, so it may take a while to submit a proper pull request (e.g. fix any broken unit tests, write new tests, and tune the API as well as the new behavior). Moerover, &lt;strong&gt;currently my site does not use jQuery&lt;/strong&gt; so I am missing a huge dependency. Rewriting it using vanilla JS seems to require considerable work, and the very thing I don&amp;rsquo;t have at hand is time :(&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ve decided to leave this improvement in future development. But if your site use Pelican Markdown and imports jQuery, the diff will add the code language back. &lt;/p&gt;</content><category term="en"></category><category term="blog"></category><category term="pelican"></category><category term="codehilite"></category><category term="pygment"></category></entry></feed>